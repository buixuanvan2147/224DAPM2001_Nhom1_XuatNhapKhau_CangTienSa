@model Website_CangTienSa.Models.KVL_DangKyViewModel
@{
    ViewBag.Title = "Đăng Ký";
    Layout = "~/Views/Shared/_LayoutKhachVangLai.cshtml";
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
<script src="/Scripts/jquery-3.6.0.min.js"></script>
<script>
    window.jQuery || document.write('<script src="https://code.jquery.com/jquery-3.6.0.min.js"><\/script>');
</script>
<script src="/Scripts/jquery.validate.min.js"></script>
<script>
    window.jQuery.validator || document.write('<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"><\/script>');
</script>
<script src="/Scripts/additional-methods.min.js"></script>
<script>
    window.jQuery.validator || document.write('<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/additional-methods.min.js"><\/script>');
</script>
<script src="/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    window.jQuery.validator || document.write('<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"><\/script>');
</script>

<style>
    :root {
        --primary-color: #28a745;
        --danger-color: #dc3545;
        --input-bg: #f9fafb;
        --shadow-color: rgba(0, 0, 0, 0.08);
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .table-responsive {
        overflow-x: auto;
        border-radius: 8px;
        box-shadow: 0 6px 12px var(--shadow-color);
        margin-bottom: 70px;
        background-color: #ffffff;
        padding: 30px;
    }

    .create-account {
        text-align: center;
        margin-bottom: 20px;
        color: #343a40;
        font-size: 2rem;
        font-weight: 700;
        text-transform: uppercase;
    }

    .form-container {
        display: flex;
        gap: 30px;
        margin-top: 20px;
        flex-wrap: wrap;
    }

    .left-section {
        flex: 1;
        max-width: 300px;
        height: 400px;
        text-align: center;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #2a2d3e;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .profile-picture-preview {
        margin-top: 10px;
        border: 1px solid #eee;
        border-radius: 5px;
        overflow: hidden;
        height: 250px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #ffffff;
    }

        .profile-picture-preview img {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
            display: block;
        }

    .custom-button {
        background-color: #3471eb;
        color: #ffffff;
        padding: 8px 16px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        display: inline-block;
        width: 100%;
    }

        .custom-button:hover {
            background-color: #0056b3;
        }

    #imagePath {
        display: block;
        margin-top: 10px;
        font-size: 14px;
        color: #ffffff;
        text-align: center;
    }

    .right-section {
        flex: 2;
        min-width: 300px;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
            color: #333;
        }

        .form-group input[type="text"],
        .form-group input[type="password"],
        .form-group input[type="email"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            box-sizing: border-box;
            background-color: var(--input-bg);
        }

            .form-group input[type="text"]:focus,
            .form-group input[type="password"]:focus,
            .form-group input[type="email"]:focus {
                outline: none;
                border-color: var(--primary-color);
                box-shadow: 0 0 0 4px rgba(40, 167, 69, 0.15);
                background-color: #ffffff;
            }

        .form-group .error-message {
            color: var(--danger-color);
            font-size: 14px;
            margin-top: 5px;
        }

    .notification.success {
        background-color: #d4edda;
        color: #155724;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 20px;
        text-align: center;
        font-size: 0.95rem;
        border: 1px solid #c3e6cb;
        animation: fadeIn 0.5s ease-in;
    }

    .validation-summary {
        color: var(--danger-color);
        margin-bottom: 20px;
        text-align: center;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .btnTaoTaiKhoan {
        background-color: var(--primary-color);
        border: 1px solid var(--primary-color);
        color: white;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        display: block;
        width: 100%;
        margin-top: 20px;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .btnTaoTaiKhoan:hover {
            background-color: #1e7e34;
            transform: translateY(-4px);
            box-shadow: 0 8px 20px rgba(40, 167, 69, 0.4);
        }

        .btnTaoTaiKhoan:active {
            transform: translateY(0);
            box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);
        }

        .btnTaoTaiKhoan:disabled {
            background: linear-gradient(45deg, #6c757d, #868e96);
            cursor: not-allowed;
            opacity: 0.7;
            transform: none;
            box-shadow: none;
        }

        .btnTaoTaiKhoan .spinner {
            display: none;
            border: 4px solid rgba(255, 255, 255, 0.7);
            border-top: 4px solid #ffffff;
            border-radius: 50%;
            width: 22px;
            height: 22px;
            animation: spin 0.8s linear infinite;
            margin-left: 10px;
        }

        .btnTaoTaiKhoan.loading .spinner {
            display: inline-block;
        }

        .btnTaoTaiKhoan.loading span:first-child {
            visibility: hidden;
        }

    .form-actions {
        text-align: center;
        margin-top: 25px;
    }

    .login-link {
        color: #007bff;
        text-decoration: underline;
        font-size: 16px;
    }

        .login-link a {
            color: inherit;
            text-decoration: inherit;
        }

            .login-link a:hover {
                color: #0056b3;
            }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    @@media (max-width: 768px) {
        .form-container {
            flex-direction: column;
        }

        .left-section,
        .right-section {
            max-width: 100%;
        }
    }

    @@media (max-width: 480px) {
        .table-responsive {
            padding: 20px;
        }

        .create-account {
            font-size: 1.5rem;
        }

        .form-group input[type="text"],
        .form-group input[type="password"],
        .form-group input[type="email"] {
            padding: 8px;
            font-size: 14px;
        }

        .btnTaoTaiKhoan {
            padding: 8px;
            font-size: 14px;
        }
    }
</style>

<div class="table-responsive">
    <h2 class="create-account">ĐĂNG KÝ TÀI KHOẢN</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="notification success">
            @TempData["SuccessMessage"]
        </div>
    }

    <div class="validation-summary">
        @Html.ValidationSummary(false, "", new { @class = "error-message" })
    </div>

    <div class="form-container">
        

        <div class="right-section">
            @using (Html.BeginForm("DangKy", "Home", FormMethod.Post, new { id = "registerForm", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(model => model.tenKhachHang, "Họ và Tên")
                    @Html.TextBoxFor(model => model.tenKhachHang, new { @class = "form-control", placeholder = "Nhập họ và tên", required = "required" })
                    @Html.ValidationMessageFor(model => model.tenKhachHang, "", new { @class = "error-message" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tenDangNhap, "Tên Đăng Nhập")
                    @Html.TextBoxFor(model => model.tenDangNhap, new { @class = "form-control", placeholder = "Nhập tên đăng nhập", required = "required" })
                    @Html.ValidationMessageFor(model => model.tenDangNhap, "", new { @class = "error-message" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.matKhau, "Mật Khẩu")
                    @Html.PasswordFor(model => model.matKhau, new { @class = "form-control", placeholder = "Nhập mật khẩu", required = "required" })
                    @Html.ValidationMessageFor(model => model.matKhau, "", new { @class = "error-message" })
                </div>

                <div class="form-group">
                    <label for="XacNhanMatKhau">Nhập Lại Mật Khẩu</label>
                    <input type="password" id="XacNhanMatKhau" name="XacNhanMatKhau" class="form-control" placeholder="Nhập lại mật khẩu" required="required" />
                    <span class="error-message" id="XacNhanMatKhau-error"></span>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.cccd, "CCCD")
                    @Html.TextBoxFor(model => model.cccd, new { @class = "form-control", placeholder = "Nhập CCCD", required = "required", maxlength = "12", pattern = "\\d{12}" })
                    @Html.ValidationMessageFor(model => model.cccd, "", new { @class = "error-message" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sdtKhachHang, "Số Điện Thoại")
                    @Html.TextBoxFor(model => model.sdtKhachHang, new { @class = "form-control", placeholder = "Nhập số điện thoại", required = "required", pattern = "\\d{10}" })
                    @Html.ValidationMessageFor(model => model.sdtKhachHang, "", new { @class = "error-message" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, "Email")
                    @Html.TextBoxFor(model => model.email, new { @class = "form-control", type = "email", placeholder = "Nhập địa chỉ email", required = "required" })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "error-message" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.diaChiLienLac, "Địa Chỉ")
                    @Html.TextBoxFor(model => model.diaChiLienLac, new { @class = "form-control", placeholder = "Nhập địa chỉ", required = "required" })
                    @Html.ValidationMessageFor(model => model.diaChiLienLac, "", new { @class = "error-message" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.tenCongTy, "Tên Công Ty (nếu có)")
                    @Html.TextBoxFor(model => model.tenCongTy, new { @class = "form-control", placeholder = "Nhập tên công ty" })
                    @Html.ValidationMessageFor(model => model.tenCongTy, "", new { @class = "error-message" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.maSoThueCongTy, "Mã Số Thuế (nếu có)")
                    @Html.TextBoxFor(model => model.maSoThueCongTy, new { @class = "form-control", placeholder = "Nhập mã số thuế" })
                    @Html.ValidationMessageFor(model => model.maSoThueCongTy, "", new { @class = "error-message" })
                </div>

                <div class="form-group">
                    <button type="submit" class="btnTaoTaiKhoan"><span>Gửi Yêu Cầu</span><span class="spinner"></span></button>
                </div>
            }

            <div class="form-actions">
                <p class="login-link"><a href="@Url.Action("DangNhap", "Home")">Bạn đã có tài khoản? Đăng nhập</a></p>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#registerForm");

        $("#registerForm").validate({
            rules: {
                tenDangNhap: {
                    required: true,
                    minlength: 4,
                    maxlength: 50
                },
                matKhau: {
                    required: true,
                    minlength: 6,
                    maxlength: 100
                },
                XacNhanMatKhau: {
                    required: true,
                    equalTo: "#matKhau"
                },
                tenKhachHang: {
                    required: true,
                    maxlength: 100
                },
                cccd: {
                    required: true,
                    digits: true,
                    minlength: 12,
                    maxlength: 12
                },
                sdtKhachHang: {
                    required: true,
                    digits: true,
                    minlength: 10,
                    maxlength: 10
                },
                email: {
                    required: true,
                    email: true,
                    maxlength: 100
                },
                diaChiLienLac: {
                    required: true,
                    maxlength: 200
                },
                tenCongTy: {
                    maxlength: 100
                },
                maSoThueCongTy: {
                    maxlength: 20
                },
                imageFile: {
                    accept: "image/jpeg,image/png,image/gif,image/jpg"
                }
            },
            messages: {
                tenDangNhap: {
                    required: "Vui lòng nhập tên đăng nhập",
                    minlength: "Tên đăng nhập phải có ít nhất 4 ký tự",
                    maxlength: "Tên đăng nhập không được vượt quá 50 ký tự"
                },
                matKhau: {
                    required: "Vui lòng nhập mật khẩu",
                    minlength: "Mật khẩu phải có ít nhất 6 ký tự",
                    maxlength: "Mật khẩu không được vượt quá 100 ký tự"
                },
                XacNhanMatKhau: {
                    required: "Vui lòng nhập lại mật khẩu",
                    equalTo: "Mật khẩu xác nhận không khớp"
                },
                tenKhachHang: {
                    required: "Vui lòng nhập họ và tên",
                    maxlength: "Họ và tên không được vượt quá 100 ký tự"
                },
                cccd: {
                    required: "Vui lòng nhập CCCD",
                    digits: "CCCD chỉ được chứa số",
                    minlength: "CCCD phải có đúng 12 số",
                    maxlength: "CCCD phải có đúng 12 số"
                },
                sdtKhachHang: {
                    required: "Vui lòng nhập số điện thoại",
                    digits: "Số điện thoại chỉ được chứa số",
                    minlength: "Số điện thoại phải có 10 số",
                    maxlength: "Số điện thoại phải có 10 số"
                },
                email: {
                    required: "Vui lòng nhập email",
                    email: "Vui lòng nhập email hợp lệ",
                    maxlength: "Email không được vượt quá 100 ký tự"
                },
                diaChiLienLac: {
                    required: "Vui lòng nhập địa chỉ",
                    maxlength: "Địa chỉ không được vượt quá 200 ký tự"
                },
                tenCongTy: {
                    maxlength: "Tên công ty không được vượt quá 100 ký tự"
                },
                maSoThueCongTy: {
                    maxlength: "Mã số thuế không được vượt quá 20 ký tự"
                },
            },
            errorPlacement: function (error, element) {
                if (element.attr("name") == "XacNhanMatKhau") {
                    error.appendTo("#XacNhanMatKhau-error");
                } else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                var userConfirmed = confirm("Xác nhận đăng ký tài khoản?");
                if (!userConfirmed) {
                    return false;
                }
                var $button = $(form).find('button[type="submit"]');
                $button.addClass('loading').prop('disabled', true);
                $(form).find('input, button').prop('disabled', true);
                form.submit();
            }
        });
    });
</script>