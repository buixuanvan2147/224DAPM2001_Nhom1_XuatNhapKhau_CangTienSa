@model List<Website_CangTienSa.Models.PhieuNhapModel>
@using Newtonsoft.Json;
@using Website_CangTienSa.Models; 

@{
    ViewBag.Title = "Index_NhanVienNhapKho";
    Layout = "~/Views/Shared/_LayoutNhanVienNhapKho.cshtml";
}

<style>
    /* CSS giữ nguyên, không thay đổi */
    .container {
        width: 100%;
        max-width: 1200px;
        margin-left: auto;
        margin-right: auto;
        padding-left: 15px;
        padding-right: 15px;
    }

    .py-5 {
        padding-top: 20px;
        padding-bottom: 20px;
    }

    .text-2xl {
        font-size: 24px;
        line-height: 32px;
    }

    .font-bold {
        font-weight: 700;
    }

    .mb-6 {
        margin-bottom: 24px;
    }

    .text-center {
        text-align: center;
    }

    .text-primary {
        color: #007bff;
    }

    .flex {
        display: flex;
    }

    .flex-wrap {
        flex-wrap: wrap;
    }

    .gap-4 {
        gap: 16px;
    }

    .justify-center {
        justify-content: center;
    }

    .w-full {
        width: 100%;
    }

    .md-w-1-3 {
        width: 100%;
    }

    @@media (min-width: 768px) {
        .md-w-1-3 {
            width: 33.333333%;
        }
    }

    .text-sm {
        font-size: 14px;
        line-height: 20px;
    }

    .font-medium {
        font-weight: 500;
    }

    .text-gray-700 {
        color: #4b5563;
    }

    .mt-1 {
        margin-top: 4px;
    }

    .p-2 {
        padding: 8px;
    }

    .border {
        border: 1px solid #e5e7eb;
    }

    .rounded-md {
        border-radius: 6px;
    }

    .bg-gray-200 {
        background-color: #e5e7eb;
    }

    .hidden {
        display: none;
    }

    .text-lg {
        font-size: 18px;
        line-height: 28px;
    }

    .font-semibold {
        font-weight: 600;
    }

    .mb-4 {
        margin-bottom: 16px;
    }

    .justify-between {
        justify-content: space-between;
    }

    .gap-3 {
        gap: 12px;
    }

    .mt-4 {
        margin-top: 16px;
    }

    .btn {
        display: inline-block;
        font-weight: 400;
        color: #212529;
        text-align: center;
        vertical-align: middle;
        cursor: pointer;
        background-color: transparent;
        border: 1px solid transparent;
        padding: 6px 12px;
        font-size: 16px;
        line-height: 24px;
        border-radius: 4px;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .btn-primary {
        color: #fff;
        background-color: #ff6200;
        border-color: #ff6200;
    }

        .btn-primary:hover {
            background-color: #e55a00;
            border-color: #e55a00;
        }

    .btn-secondary {
        color: #fff;
        background-color: #6c757d;
        border-color: #6c757d;
    }

        .btn-secondary:hover {
            background-color: #545b62;
            border-color: #4e555b;
        }

        .btn-secondary:disabled {
            background-color: #6c757d;
            border-color: #6c757d;
            opacity: 0.65;
        }

    .text-blue-500 {
        color: #3b82f6;
    }
</style>

<div class="container py-5">
    <!-- Tiêu đề -->
    <h1 class="text-2xl font-bold mb-6 text-center text-primary">Danh sách đơn hàng nhập kho</h1>

    <!-- Bộ lọc -->
    <div class="mb-6 flex flex-wrap gap-4 justify-center">
        <div class="w-full md-w-1-3">
            <label class="block text-sm font-medium text-gray-700">Lọc theo ngày</label>
            <input type="date" id="dateFilter" class="mt-1 p-2 w-full border rounded-md" onchange="filterOrders()">
        </div>
        <div class="w-full md-w-1-3">
            <label class="block text-sm font-medium text-gray-700">Lọc theo kho</label>
            <select id="warehouseFilter" class="mt-1 p-2 w-full border rounded-md" onchange="filterOrders()">
                <option value="">Tất cả</option>
                @foreach (var kho in ViewBag.KhoList)
                {
                    <option value="@kho">@kho</option>
                }
            </select>
        </div>
    </div>

    <!-- Danh sách đơn hàng -->
    <div class="mb-6">
        <table class="w-full border-collapse border">
            <thead>
                <tr class="bg-gray-200">
                    <th class="border p-2">Mã đơn hàng</th>
                    <th class="border p-2">Ngày nhập</th>
                    <th class="border p-2">Nhà cung cấp</th>
                    <th class="border p-2">Kho</th>
                    <th class="border p-2">Tổng tiền</th>
                    <th class="border p-2">Hành động</th>
                </tr>
            </thead>
            <tbody id="orderTable">
                @if (Model != null && Model.Any())
                {
                    foreach (var phieuNhap in Model)
                    {
                        <tr>
                            <td class="border p-2">@phieuNhap.MaPhieuNhap</td>
                            <td class="border p-2">@phieuNhap.NgayNhapCang?.ToString("yyyy-MM-dd")</td>
                            <td class="border p-2">@phieuNhap.TenNguoiGui</td>
                            <td class="border p-2">@phieuNhap.TenKho</td>
                            <td class="border p-2">
                                @{
                                    float total = phieuNhap.Items.Sum(item => item.DonGia * item.SoLuong);
                                    @total.ToString("N0") @("VNĐ")
                                }
                            </td>
                            <td class="border p-2">
                                <button class="text-blue-500" onclick="viewDetail('@phieuNhap.MaPhieuNhap')">Xem chi tiết</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="border p-2 text-center">Không có dữ liệu đơn hàng.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Phân trang -->
    <div class="flex justify-between mb-6">
        <button id="prevPage" class="btn btn-secondary px-4 py-2" onclick="changePage(-1)">Trang trước</button>
        <span id="pageInfo" class="text-sm font-medium">Trang 1</span>
        <button id="nextPage" class="btn btn-secondary px-4 py-2" onclick="changePage(1)">Trang sau</button>
    </div>

    <!-- Chi tiết đơn hàng -->
    <div id="orderDetail" class="hidden mb-6">
        <h2 class="text-lg font-semibold mb-2 text-primary">Chi tiết phiếu nhập kho</h2>
        <div class="mb-4">
            <p><strong>Mã phiếu nhập:</strong> <span id="detailOrderId"></span></p>
            <p><strong>Ngày nhập:</strong> <span id="detailDate"></span></p>
            <p><strong>Nhà cung cấp:</strong> <span id="detailSupplier"></span></p>
            <p><strong>Kho:</strong> <span id="detailWarehouse"></span></p>
        </div>
        <table class="w-full border-collapse border">
            <thead>
                <tr class="bg-gray-200">
                    <th class="border p-2">Mã hàng hóa</th>
                    <th class="border p-2">Tên hàng hóa</th>
                    <th class="border p-2">Số lượng</th>
                    <th class="border p-2">Đơn vị tính</th>
                    <th class="border p-2">Đơn giá</th>
                    <th class="border p-2">Mã container</th>
                    <th class="border p-2">Vị trí trong kho</th>
                    <th class="border p-2">Kích thước (m)</th>
                </tr>
            </thead>
            <tbody id="detailItems">
            </tbody>
        </table>
        <div class="flex gap-3 mt-4">
            <button class="btn btn-primary px-4 py-2" onclick="exportOrder()">Xuất danh sách container (CSV)</button>
            <button class="btn btn-secondary px-4 py-2" onclick="closeDetail()">Đóng</button>
        </div>
    </div>
</div>

<!-- Inventory Management Script -->
<script>
    // Chuyển dữ liệu từ Model sang JavaScript
    let orders = @Html.Raw(JsonConvert.SerializeObject(Model ?? null));
    if (!orders) orders = [];
    let currentPage = 1;
    const itemsPerPage = 2;
    let filteredOrders = [...orders];

    function displayOrders() {
        const table = document.getElementById('orderTable');
        table.innerHTML = '';
        const start = (currentPage - 1) * itemsPerPage;
        const end = start + itemsPerPage;
        const paginatedOrders = filteredOrders.slice(start, end);

        if (paginatedOrders.length === 0) {
            table.innerHTML = '<tr><td colspan="6" class="border p-2 text-center">Không có dữ liệu để hiển thị.</td></tr>';
            return;
        }

        paginatedOrders.forEach(order => {
            const total = order.Items.reduce((sum, item) => sum + (item.DonGia * item.SoLuong), 0);
            const row = table.insertRow();
            row.innerHTML = `
                <td class="border p-2">${order.MaPhieuNhap}</td>
                <td class="border p-2">${order.NgayNhapCang ? order.NgayNhapCang.split('T')[0] : ''}</td>
                <td class="border p-2">${order.TenNguoiGui}</td>
                <td class="border p-2">${order.TenKho}</td>
                <td class="border p-2">${total.toLocaleString()} VNĐ</td>
                <td class="border p-2">
                    <button class="text-blue-500" onclick="viewDetail('${order.MaPhieuNhap}')">Xem chi tiết</button>
                </td>
            `;
        });

        document.getElementById('pageInfo').textContent = `Trang ${currentPage} / ${Math.ceil(filteredOrders.length / itemsPerPage)}`;
        document.getElementById('prevPage').disabled = currentPage === 1;
        document.getElementById('nextPage').disabled = currentPage === Math.ceil(filteredOrders.length / itemsPerPage);
    }

    function filterOrders() {
        const dateFilter = document.getElementById('dateFilter').value;
        const warehouseFilter = document.getElementById('warehouseFilter').value;

        filteredOrders = orders.filter(order => {
            const orderDate = order.NgayNhapCang ? order.NgayNhapCang.split('T')[0] : '';
            const matchesDate = dateFilter ? orderDate === dateFilter : true;
            const matchesWarehouse = warehouseFilter ? order.TenKho === warehouseFilter : true;
            return matchesDate && matchesWarehouse;
        });

        currentPage = 1;
        displayOrders();
    }

    function changePage(direction) {
        currentPage += direction;
        displayOrders();
    }

    function viewDetail(orderId) {
        const order = orders.find(o => o.MaPhieuNhap === orderId);
        if (!order) return;

        document.getElementById('orderDetail').classList.remove('hidden');
        document.getElementById('detailOrderId').textContent = order.MaPhieuNhap;
        document.getElementById('detailDate').textContent = order.NgayNhapCang ? order.NgayNhapCang.split('T')[0] : '';
        document.getElementById('detailSupplier').textContent = order.TenNguoiGui;
        document.getElementById('detailWarehouse').textContent = order.TenKho;

        const detailItems = document.getElementById('detailItems');
        detailItems.innerHTML = '';
        order.Items.forEach(item => {
            const row = detailItems.insertRow();
            row.innerHTML = `
                <td class="border p-2">${item.MaHangHoa}</td>
                <td class="border p-2">${item.TenHangHoa}</td>
                <td class="border p-2">${item.SoLuong}</td>
                <td class="border p-2">${item.DonViTinh}</td>
                <td class="border p-2">${item.DonGia.toLocaleString()} VNĐ</td>
                <td class="border p-2">${item.MaContainer}</td>
                <td class="border p-2">${item.ViTriTrongKho}</td>
                <td class="border p-2">${item.KichThuoc}</td>
            `;
        });
    }

    function closeDetail() {
        document.getElementById('orderDetail').classList.add('hidden');
    }

    function exportOrder() {
        const orderId = document.getElementById('detailOrderId').textContent;
        const order = orders.find(o => o.MaPhieuNhap === orderId);
        if (!order) return;

        let csvContent = "Mã hàng hóa,Tên hàng hóa,Số lượng,Đơn vị tính,Đơn giá,Mã container,Vị trí,Kích thước (m)\n";
        order.Items.forEach(item => {
            csvContent += `${item.MaHangHoa},${item.TenHangHoa},${item.SoLuong},${item.DonViTinh},${item.DonGia.toLocaleString()},"${item.MaContainer}",${item.ViTriTrongKho},${item.KichThuoc}\n`;
        });

        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
        const link = document.createElement('a');
        link.href = URL.createObjectURL(blob);
        link.download = `PhieuNhap_${orderId}.csv`;
        link.click();
    }

    displayOrders();
</script>